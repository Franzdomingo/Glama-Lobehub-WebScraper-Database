-- LobeHub MCP Server - ANSI SQL Schema
-- Created by: Franz Phillip G. Domingo
-- Created on: 2025-08-15

CREATE TABLE mcp_servers (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    author VARCHAR(255),
    development_language VARCHAR(100),
    license VARCHAR(255),
    download_count BIGINT DEFAULT 0 CHECK (download_count >= 0),
    overview CLOB,
    mcp_directory_api VARCHAR(1000),
    website_url VARCHAR(500),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
        CONSTRAINT chk_mcp_server_name_length CHECK (CHAR_LENGTH(TRIM(name)) > 0)
);

-- Links table for MCP server external links
CREATE TABLE mcp_server_links (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id INTEGER NOT NULL,
    link_type VARCHAR(100),
    is_primary SMALLINT DEFAULT 0 CHECK (is_primary IN (0, 1)),
    url VARCHAR(1000) NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_server_links FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id)
);

-- Dependencies table for MCP server requirements
CREATE TABLE mcp_server_dependencies (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id INTEGER NOT NULL,
    dependency_type VARCHAR(100),
    dependency_name VARCHAR(255) NOT NULL,
    version_requirement VARCHAR(100),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_server_dependencies FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id)
);

-- Installation methods table for different platforms
CREATE TABLE mcp_server_installation_methods (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dependency_id INTEGER NOT NULL,
    platform VARCHAR(50) NOT NULL,
    installation_command VARCHAR(1000),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_installation_dependency FOREIGN KEY (dependency_id) REFERENCES mcp_server_dependencies(id)
);

-- Tools table for MCP server available tools
CREATE TABLE mcp_server_tools (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id INTEGER NOT NULL,
    tool_name VARCHAR(255) NOT NULL,
    tool_description VARCHAR(1000),
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_server_tools FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id)
);

-- Tool parameters table for tool input specifications
CREATE TABLE mcp_server_tool_parameters (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tool_id INTEGER NOT NULL,
    parameter_name VARCHAR(255) NOT NULL,
    parameter_type VARCHAR(100),
    is_required SMALLINT DEFAULT 0 CHECK (is_required IN (0, 1)),
    parameter_description VARCHAR(1000),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_tool_parameters FOREIGN KEY (tool_id) REFERENCES mcp_server_tools(id)
);


CREATE TABLE mcp_version_history (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id INTEGER NOT NULL,
    version_number VARCHAR(20) NOT NULL,
    is_validated SMALLINT DEFAULT 0 CHECK (is_validated IN (0, 1)),
    published_date DATE NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT uk_server_version UNIQUE (mcp_server_id, version_number),
    CONSTRAINT fk_mcp_version_history FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id)
);

-- Categories table for MCP servers
CREATE TABLE mcp_categories (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Join table for MCP servers and categories (many-to-many)
CREATE TABLE mcp_server_categories (
    mcp_server_id INTEGER NOT NULL,
    category_id INTEGER NOT NULL,
    assigned_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (mcp_server_id, category_id),
    CONSTRAINT fk_server_category_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id),
    CONSTRAINT fk_server_category_category FOREIGN KEY (category_id) REFERENCES mcp_categories(id)
);

CREATE TABLE mcp_server_scores(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    -- Glama fields (nullable)
    glama_security_grade VARCHAR(2),
    glama_license_grade VARCHAR(2),
    glama_quality_grade VARCHAR(2),
    has_glama_json SMALLINT CHECK (has_glama_json IN (0, 1)),
    can_be_inspected SMALLINT CHECK (can_be_inspected IN (0, 1)),
    has_known_vulnerabilities SMALLINT CHECK (has_known_vulnerabilities IN (0, 1)),
    -- LobeHub fields (nullable)
    lobehub_grade VARCHAR(2),
    validation_status VARCHAR(50),
    installation_methods_count SMALLINT,
    installation_methods_friendly SMALLINT CHECK (installation_methods_friendly IN (0,1)),
    includes_prompts SMALLINT CHECK (includes_prompts IN (0,1)),
    includes_resources SMALLINT CHECK (includes_resources IN (0,1)),
    -- Shared fields
    tools_count SMALLINT CHECK (tools_count >= 0),
    has_readme SMALLINT CHECK (has_readme IN (0, 1)),
    has_license SMALLINT CHECK (has_license IN (0, 1)),
    is_claimed_by_owner SMALLINT CHECK (is_claimed_by_owner IN (0, 1)),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_server_scores_merged FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id)
);