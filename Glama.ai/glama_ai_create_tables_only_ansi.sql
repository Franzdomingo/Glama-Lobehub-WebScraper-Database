-- GLAMA.AI MCP Server - CREATE TABLE Statements Only (ANSI SQL)
-- Converted from Oracle SQL to ANSI SQL by automated conversion
-- Notes: Sequences and NEXTVAL defaults were replaced with IDENTITY columns.

-- Main MCP Servers table
CREATE TABLE mcp_servers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    author VARCHAR(255),
    development_language VARCHAR(100),
    license VARCHAR(255),
    download_count BIGINT DEFAULT 0 CHECK (download_count >= 0),
    overview TEXT,
    short_description VARCHAR(1000),
    server_slug VARCHAR(255) NOT NULL UNIQUE,
    glama_url VARCHAR(500),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    scraped_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    mcp_directory_api VARCHAR(1000),
    github_star_count INTEGER DEFAULT 0 CHECK (github_star_count >= 0),
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
    CONSTRAINT chk_mcp_servers_name_length CHECK (CHAR_LENGTH(TRIM(name)) > 0)
);

-- Score Summary Table
CREATE TABLE score_summary (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    security CHAR(1) CHECK (security IN ('A', 'F')),
    license CHAR(1) CHECK (license IN ('A', 'F')),
    quality CHAR(1) CHECK (quality IN ('A', 'F')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_score_summary_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT uk_score_summary_server UNIQUE(mcp_server_id)
);

CREATE TABLE mcp_scores (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    score_summary_id BIGINT,
    criteria_name VARCHAR(100) NOT NULL,
    criteria_description VARCHAR(500),
    score_value SMALLINT DEFAULT 0 CHECK (score_value IN (0, 1)),
    max_points INTEGER DEFAULT 0 CHECK (max_points >= 0),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_scores_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT fk_mcp_scores_summary FOREIGN KEY (score_summary_id) REFERENCES score_summary(id) ON DELETE SET NULL,
    CONSTRAINT uk_mcp_scores UNIQUE(mcp_server_id, criteria_name),
    CONSTRAINT chk_mcp_scores_criteria_name CHECK (CHAR_LENGTH(TRIM(criteria_name)) > 0)
);

-- MCP Related Servers table - stores relationships between servers
CREATE TABLE mcp_related_servers (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    source_server_id BIGINT NOT NULL,
    related_server_id BIGINT NOT NULL,
    relationship_type VARCHAR(50) NOT NULL CHECK (relationship_type IN ('Semantically Related Servers', 'User-submitted Alternatives')),
    description VARCHAR(1000),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_by VARCHAR(255),
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
    CONSTRAINT fk_related_servers_source FOREIGN KEY (source_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT fk_related_servers_related FOREIGN KEY (related_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT uk_related_servers UNIQUE(source_server_id, related_server_id, relationship_type),
    CONSTRAINT chk_no_self_reference CHECK (source_server_id != related_server_id)
);

-- Categories for categorization
CREATE TABLE categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    category_name VARCHAR(100) NOT NULL UNIQUE,
    description VARCHAR(500),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
    CONSTRAINT chk_categories_name_length CHECK (CHAR_LENGTH(TRIM(category_name)) > 0)
);

-- MCP External Links
CREATE TABLE mcp_links (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    link_type VARCHAR(50) NOT NULL,
    url VARCHAR(1000) NOT NULL,
    is_primary SMALLINT DEFAULT 0 CHECK (is_primary IN (0, 1)),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_mcp_links_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT chk_mcp_links_url_length CHECK (CHAR_LENGTH(TRIM(url)) > 0),
    CONSTRAINT chk_mcp_links_type_length CHECK (CHAR_LENGTH(TRIM(link_type)) > 0)
);

-- Junction table for MCP Server - Categories relationship
CREATE TABLE server_categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    category_id BIGINT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_server_categories_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT fk_server_categories_category FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE,
    CONSTRAINT uk_server_categories UNIQUE(mcp_server_id, category_id)
);

-- Server Configuration Environment Variables
CREATE TABLE server_environment_variables (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    variable_name VARCHAR(255) NOT NULL,
    is_required SMALLINT DEFAULT 1 CHECK (is_required IN (0, 1)),
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_server_env_vars_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT uk_server_env_vars UNIQUE(mcp_server_id, variable_name),
    CONSTRAINT chk_server_env_vars_name CHECK (CHAR_LENGTH(TRIM(variable_name)) > 0)
);

-- MCP Prompts (Interactive templates invoked by user choice)
CREATE TABLE mcp_prompts (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    prompt_name VARCHAR(255) NOT NULL,
    prompt_description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_prompts_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT chk_mcp_prompts_name CHECK (CHAR_LENGTH(TRIM(prompt_name)) > 0)
);

-- MCP Resources (Contextual data attached and managed by the client)
CREATE TABLE mcp_resources (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    resource_name VARCHAR(255) NOT NULL,
    resource_description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_resources_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT chk_mcp_resources_name CHECK (CHAR_LENGTH(TRIM(resource_name)) > 0)
);

-- MCP Tools (Functions exposed by MCP servers)
CREATE TABLE mcp_tools (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    tool_name VARCHAR(255) NOT NULL,
    tool_description TEXT,
    input_schema_json TEXT,
    tool_category VARCHAR(100),
    usage_examples TEXT,
    is_active SMALLINT DEFAULT 1 NOT NULL CHECK (is_active IN (0, 1)),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_tools_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE,
    CONSTRAINT chk_mcp_tools_name CHECK (CHAR_LENGTH(TRIM(tool_name)) > 0)
);

CREATE TABLE mcp_reviews (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    review_content TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_reviews_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE
);

-- MCP Endpoints table - stores endpoint information for each MCP server
CREATE TABLE mcp_endpoints (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_server_id BIGINT NOT NULL,
    endpoint_content TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_endpoints_server FOREIGN KEY (mcp_server_id) REFERENCES mcp_servers(id) ON DELETE CASCADE
);

-- MCP Input Schema table - stores individual input parameters for MCP tools
CREATE TABLE mcp_input_schema (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mcp_tool_id BIGINT NOT NULL,
    parameter_name VARCHAR(255) NOT NULL,
    is_required SMALLINT DEFAULT 1 CHECK (is_required IN (0, 1)),
    description TEXT,
    default_value VARCHAR(1000),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT fk_input_schema_tool FOREIGN KEY (mcp_tool_id) REFERENCES mcp_tools(id) ON DELETE CASCADE,
    CONSTRAINT uk_input_schema_tool_param UNIQUE(mcp_tool_id, parameter_name),
    CONSTRAINT chk_input_schema_name CHECK (CHAR_LENGTH(TRIM(parameter_name)) > 0)
);
